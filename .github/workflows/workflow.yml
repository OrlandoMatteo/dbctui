name: Build & Release

on:
  push:
    tags:
      - "v*"   # e.g. v1.0.0
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
        exclude:
          - goos: windows
            goarch: arm64 # Skip Windows ARM if not needed
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"

      - name: Make dist folder
        run: mkdir -p dist

      - name: Build for ${{ matrix.goos }} / ${{ matrix.goarch }}
        run: |
          EXT=""
          if [ "${{ matrix.goos }}" = "windows" ]; then EXT=".exe"; fi
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build \
            -o dist/dbctui-${{ matrix.goos }}-${{ matrix.goarch }}$EXT .

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dbctui-${{ matrix.goos }}-${{ matrix.goarch }}
          path: dist/dbctui-${{ matrix.goos }}-${{ matrix.goarch }}*

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/**
        env:
          GITHUB_TOKEN: ${{  secrets.GH_PAT }}
